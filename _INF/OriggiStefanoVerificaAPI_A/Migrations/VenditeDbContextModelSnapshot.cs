// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OriggiStefanoVerificaAPI_A;

#nullable disable

namespace OriggiStefanoVerificaAPI_A.Migrations
{
    [DbContext(typeof(VenditeDbContext))]
    partial class VenditeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Acquisti", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProdottoID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DataAcquisto")
                        .HasColumnType("date");

                    b.HasKey("ClienteId", "ProdottoID");

                    b.HasIndex("ProdottoID");

                    b.ToTable("Acquisti");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Citta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroCartaDiCredito")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Fornitore", b =>
                {
                    b.Property<int>("FornitoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FornitoreId"));

                    b.Property<int>("Cap")
                        .HasColumnType("int");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FornitoreId");

                    b.ToTable("Fornitore");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Prodotto", b =>
                {
                    b.Property<int>("ProdottoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProdottoId"));

                    b.Property<int>("FornitoreId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Prezzo")
                        .HasColumnType("double");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.HasKey("ProdottoId");

                    b.HasIndex("FornitoreId");

                    b.ToTable("Prodotto");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Acquisti", b =>
                {
                    b.HasOne("OriggiStefanoVerificaAPI_A.Cliente", "Cliente")
                        .WithMany("Acquisti")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OriggiStefanoVerificaAPI_A.Prodotto", "Prodotto")
                        .WithMany("Acquisti")
                        .HasForeignKey("ProdottoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Prodotto");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Prodotto", b =>
                {
                    b.HasOne("OriggiStefanoVerificaAPI_A.Fornitore", "Fornitore")
                        .WithMany("Prodotti")
                        .HasForeignKey("FornitoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornitore");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Cliente", b =>
                {
                    b.Navigation("Acquisti");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Fornitore", b =>
                {
                    b.Navigation("Prodotti");
                });

            modelBuilder.Entity("OriggiStefanoVerificaAPI_A.Prodotto", b =>
                {
                    b.Navigation("Acquisti");
                });
#pragma warning restore 612, 618
        }
    }
}
