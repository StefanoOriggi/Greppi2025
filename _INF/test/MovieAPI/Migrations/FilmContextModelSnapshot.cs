// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieAPI.Data;

#nullable disable

namespace MovieAPI.Migrations
{
    [DbContext(typeof(FilmContext))]
    partial class FilmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MovieAPI.Models.Attore", b =>
                {
                    b.Property<int>("AttoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttoreId"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Eta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AttoreId");

                    b.ToTable("Attore");
                });

            modelBuilder.Entity("MovieAPI.Models.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FilmId"));

                    b.Property<DateOnly>("Datauscita")
                        .HasColumnType("date");

                    b.Property<string>("Genere")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RegistaId")
                        .HasColumnType("int");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FilmId");

                    b.HasIndex("RegistaId");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("MovieAPI.Models.FilmAttori", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("AttoreId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DataPartecipazione")
                        .HasColumnType("date");

                    b.HasKey("FilmId", "AttoreId");

                    b.HasIndex("AttoreId");

                    b.ToTable("FilmAtori");
                });

            modelBuilder.Entity("MovieAPI.Models.Regista", b =>
                {
                    b.Property<int>("RegistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RegistaId"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nazionalita")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RegistaId");

                    b.ToTable("Regista");
                });

            modelBuilder.Entity("MovieAPI.Models.Film", b =>
                {
                    b.HasOne("MovieAPI.Models.Regista", "Regista")
                        .WithMany("Films")
                        .HasForeignKey("RegistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regista");
                });

            modelBuilder.Entity("MovieAPI.Models.FilmAttori", b =>
                {
                    b.HasOne("MovieAPI.Models.Attore", "Attori")
                        .WithMany("FilmAttori")
                        .HasForeignKey("AttoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieAPI.Models.Film", "Film")
                        .WithMany("filmAttori")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attori");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("MovieAPI.Models.Attore", b =>
                {
                    b.Navigation("FilmAttori");
                });

            modelBuilder.Entity("MovieAPI.Models.Film", b =>
                {
                    b.Navigation("filmAttori");
                });

            modelBuilder.Entity("MovieAPI.Models.Regista", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
